#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    reorder nameChildren = ["GridMaterial", "Sphere"]
    rel material:binding = </Root/material/_materials/Material_002> (
        bindMaterialAs = "strongerThanDescendants"
    )

    def "Shadow" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        prepend references = @Shadow.usdz@
    )
    {
        rel material:binding = </Root/material/_materials/Material_002> (
            bindMaterialAs = "strongerThanDescendants"
        )
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "lambert1"
            {
                token inputs:frame:stPrimvarName = "st"
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "lambert1PreviewSurface"
                {
                    float inputs:clearcoat = 0.3
                    float inputs:clearcoat.connect = </Root/Shadow/Materials/lambert1/clearcoat.outputs:r>
                    color3f inputs:diffuseColor.connect = </Root/Shadow/Materials/lambert1/diffuseColor.outputs:rgb>
                    color3f inputs:emissiveColor = (0.07857603, 0.09956861, 0.2619201) (
                        colorSpace = "srgb_displayp3"
                    )
                    color3f inputs:emissiveColor.connect = None
                    normal3f inputs:normal = (5, 5, 5)
                    normal3f inputs:normal.connect = </Root/Shadow/Materials/lambert1/normal.outputs:rgb>
                    delete float inputs:occlusion.connect = </Root/Shadow/Materials/lambert1/occlusion_texture.outputs:r>
                    float inputs:opacityThreshold
                }

                def Shader "diffuseColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @toppng.com-fractal-glow-bright-texture-abstraction-3840x2400.jpg@
                    float2 inputs:st.connect = </Root/Shadow/Materials/lambert1/diffuseColor/TexCoordReader.outputs:result>
                    color3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Shadow/Materials/lambert1/lambert1PreviewSurface.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "clearcoat"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @toppng.com-fractal-glow-bright-texture-abstraction-3840x2400.jpg@
                    float2 inputs:st.connect = </Root/Shadow/Materials/lambert1/clearcoat/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Shadow/Materials/lambert1/lambert1PreviewSurface.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "occlusion"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @toppng.com-fractal-glow-bright-texture-abstraction-3840x2400.jpg@
                    float2 inputs:st.connect = </Root/Shadow/Materials/lambert1/occlusion/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Shadow/Materials/lambert1/lambert1PreviewSurface.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "normal"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @normal.png@
                    float2 inputs:st.connect = </Root/Shadow/Materials/lambert1/normal/TexCoordReader.outputs:result>
                    normal3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Shadow/Materials/lambert1/lambert1PreviewSurface.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "emissiveColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @occulusion.png@
                    float2 inputs:st.connect = </Root/Shadow/Materials/lambert1/emissiveColor/TexCoordReader.outputs:result>
                    color3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Shadow/Materials/lambert1/lambert1PreviewSurface.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }
            }
        }

        over "Body_Cube_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = None (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }

    def "material" (
        active = true
        prepend references = @material.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)

        over "_materials"
        {
            over "Material_002"
            {
                def Shader "opacity"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @occulusion.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/opacity/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                over "Principled_BSDF"
                {
                    delete color3f inputs:diffuseColor.connect = </Root/material/_materials/Material_002/diffuseColor.outputs:rgb>
                    prepend color3f inputs:diffuseColor.connect = </Root/material/_materials/Material_002/diffuseColor.outputs:rgb>
                    color3f inputs:emissiveColor = (0.000386908, 0, 0.20458142) (
                        colorSpace = "srgb_displayp3"
                    )
                    color3f inputs:emissiveColor.connect = None
                    float inputs:metallic = 1
                    normal3f inputs:normal = (10, 5, 1)
                    normal3f inputs:normal.connect = </Root/material/_materials/Material_002/normal.outputs:rgb>
                    float inputs:opacity.connect = </Root/material/_materials/Material_002/opacity.outputs:r>
                    float inputs:opacityThreshold = 0.8
                    float inputs:opacityThreshold.connect = </Root/material/_materials/Material_002/opacityThreshold.outputs:r>
                    float inputs:roughness = 1
                    float inputs:roughness.connect = </Root/material/_materials/Material_002/roughness.outputs:r>
                    float inputs:specular = 0.7
                    float inputs:specular.connect = None
                }

                def Shader "normal"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @normal.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/normal/TexCoordReader.outputs:result>
                    normal3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "emissiveColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @roughness 1.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/emissiveColor/TexCoordReader.outputs:result>
                    color3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "roughness"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @roughness 1.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/roughness/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                over "diffuseColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @toppng.com-fractal-glow-bright-texture-abstraction-3840x2400.jpg@
                }

                def Shader "specular"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @albedo.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/specular/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "opacityThreshold"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @occulusion.png@
                    float2 inputs:st.connect = </Root/material/_materials/Material_002/opacityThreshold/TexCoordReader.outputs:result>
                    float outputs:r

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/material/_materials/Material_002/Principled_BSDF.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }
            }
        }
    }
}

