#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Root" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    references = None
)
{
    reorder nameChildren = ["Shadow", "Materials"]
    rel material:binding = </Root/Materials/_materials/Material_002> (
        bindMaterialAs = "strongerThanDescendants"
    )
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (0.01, 0.01, 0.01)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "Materials" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @material.usda@
    )
    {
        rel material:binding = </Root/Materials/_materials/Material_002> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (0.07849018, 0.99691486, 0, 0)
        float3 xformOp:scale = (0.99999976, 0.9999999, 0.9999999)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "_materials"
        {
            def Material "Material_002"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Materials/_materials/Material_002/Principled_BSDF.outputs:surface>

                def Shader "Principled_BSDF"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float inputs:clearcoat = 0.7924528
                    float inputs:clearcoatRoughness = 0
                    color3f inputs:diffuseColor.connect = </Root/Materials/_materials/Material_002/Image_Texture.outputs:rgb>
                    color3f inputs:emissiveColor = (0, 0, 0.06271989)
                    float inputs:ior = 25.849998
                    float inputs:metallic = 0
                    float inputs:opacity = 1
                    float inputs:roughness = 0
                    float inputs:specular = 1
                    token outputs:surface
                }

                def Shader "Image_Texture"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @./textures/toppng.com-fractal-glow-bright-texture-abstraction-3840x2400.jpg@
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </Root/Materials/_materials/Material_002/uvmap.outputs:result>
                    float3 outputs:rgb
                }

                def Shader "uvmap"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "UVMap"
                    float2 outputs:result
                }
            }
        }
    }

    def "Shadow" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @Shadow.usdz@
    )
    {
        rel material:binding = </Root/Materials/_materials/Material_002> (
            bindMaterialAs = "strongerThanDescendants"
        )
        quatf xformOp:orient = (0.7604262, 0.64942443, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

